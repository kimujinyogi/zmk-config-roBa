#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// https://qiita.com/Reotech/items/e048073b3c5831d3e1c2
// #includeのあとのあたりにスクロール量変更の定義を追記

#undef ZMK_POINTING_DEFAULT_SCRL_VAL

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        // 追加：ホールド開始でLANG2を一回送信 → レイヤー2を押しっぱなし

        ctrl_shift: osm_ctrl_shift {
            label = "OSM_CTRL_SHIFT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &sk LSHIFT>;
        };

        ctrl_shift_alt: ctrl_shift_alt {
            compatible = "zmk,behavior-macro";
            label = "CTRL_SHIFT_ALT";
            #binding-cells = <0>;
            bindings = <&sk LCTRL &sk LSHIFT &sk LEFT_ALT>;
        };

        cmd_shift: cmd_shift {
            compatible = "zmk,behavior-macro";
            label = "CMD_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LCMD &sk LSHIFT>;
        };

        cmd_shift_alt: cmd_shift_alt {
            compatible = "zmk,behavior-macro";
            label = "CMD_SHIFT_ALT";
            #binding-cells = <0>;
            bindings = <&sk LCMD &sk LSHIFT &sk LEFT_ALT>;
        };

        esc_lang2: esc_lang2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp ESC>;
            label = "ESC_LANG2";
        };

        alt_shift: alt_shift {
            compatible = "zmk,behavior-macro";
            label = "ALT_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &sk LSHIFT>;
        };
    };

    behaviors {
        // 追加：SPACEのHold-Tap（Tap=SPACE / Hold=上のマクロ）
        // 追加した (j_kim)

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_fast: lt_fast {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_FAST";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W     &kp E     &kp R      &kp T                                      &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A                  &kp S     &kp D     &kp F      &kp G      &kp ESCAPE       &kp MINUS      &kp H        &kp J  &kp K      &kp L    &lt 5 RETURN
&kp Z                  &kp X     &kp C     &kp V      &kp B      &kp SQT          &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &mt RSHIFT SLASH
&mt LEFT_SHIFT ESCAPE  &kp LALT  &kp LCMD  &kp LSHFT  &kp LCTRL  &lt 2 LANG2      &lt 4 LANG1    &lt 3 SPACE                             &lt 6 BACKSPACE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE       &none       &none           &none     &none                              &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&ctrl_shift      &alt_shift  &none           &kp HOME  &kp PAGE_UP    &none      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&ctrl_shift_alt  &cmd_shift  &cmd_shift_alt  &kp END   &kp PAGE_DOWN  &none      &none    &none   &none   &none   &none   &kp F11
&none            &none       &none           &none     &none          &none      &none    &none                           &kp F12
            >;
        };

        NUM {
            bindings = <
&kp N1    &kp N2  &kp N3    &kp N4    &kp N5                              &kp N6            &kp N7             &kp N8          &kp N9           &kp N0
&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &trans        &kp GRAVE  &kp CARET         &kp AMPS           &kp STAR        &kp LPAR         &kp RPAR
&trans    &trans  &trans    &trans    &trans     &kp PLUS      &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&trans    &trans  &trans    &trans    &trans     &trans        &trans     &trans                                                                &kp PIPE
            >;
        };

        AS {
            bindings = <
&kp LS(LA(LC(Q)))  &kp LS(LA(LC(W)))  &kp LS(LA(LC(E)))   &kp LS(LA(LC(R)))     &trans                                     &trans            &kp LG(LEFT_BRACKET)      &trans    &kp LG(RIGHT_BRACKET)      &kp BSPC
&kp LS(LA(LC(A)))  &kp LS(LA(LC(S)))  &kp LG(LS(LC(N4)))  &kp LS(LG(NUMBER_4))  &kp LC(LA(LS(MINUS)))  &trans      &trans  &kp LC(LG(LEFT))  &kp LS(LG(LEFT_BRACKET))  &kp UP    &kp LG(LS(RIGHT_BRACKET))  &kp LG(LC(RIGHT))
&kp LS(LA(LC(Z)))  &kp LS(LA(LC(X)))  &kp LS(LG(F1))      &kp LG(LS(F2))        &kp LC(LA(LS(EQUAL)))  &trans      &trans  &kp LG(LA(LEFT))  &kp LEFT                  &kp DOWN  &kp RIGHT                  &kp LA(LG(RIGHT))
&trans             &trans             &trans              &trans                &trans                 &trans      &trans  &trans                                                                           &kp DELETE
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        BT {
            bindings = <
&none         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none  &none                                     &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp C_VOL_DN  &kp C_VOL_UP          &kp C_MUTE            &none  &kp C_PLAY_PAUSE  &none      &none        &none           &none         &none         &none         &none
&none         &none                 &none                 &none  &none             &none      &bootloader  &bt BT_CLR_ALL  &bt BT_CLR    &none         &none         &none
&none         &none                 &none                 &none  &none             &none      &none        &none                                                     &none
            >;

            label = "BT";
        };
    };
};
